import numpy as np
import cv2 as cv
from image import readImage, applyGrayscale, applyNoiseRemoval
from segmentation import adaptiveThreshold, lineLevelSegmentation, wordLevelSegmentation
from plot import plotImage, plotHistogram

def main():

    imgFolder = "src/inputImages/"
    imgName = "bookpage"
    imgFormat = ".jpg"
    inputImage = readImage(imgFolder + imgName + imgFormat) # reads image file from folder

    modifiedInputImage = applyGrayscale(inputImage) # filters the image to grayscale
    modifiedInputImage = applyNoiseRemoval(modifiedInputImage) # applies a filter to remove noise
    binaryInputImage = adaptiveThreshold(modifiedInputImage) # applies adaptive threshold to get a binary image

    # plotting binary image
    plotImage(binaryInputImage, "Binary image generated by Adaptive Threshold")

    # applies a segmentation that returns an array of text lines
    lineImages = lineLevelSegmentation(binaryInputImage)
    # TODO: here it should call a function to save this list of images 

    # applies a segmentation on each line that returns an array of words from that text line
    wordsImages = []
    for line in lineImages:
        wordsImages.append(wordLevelSegmentation(line))
    # TODO: here it should call a function to save this list of images

if __name__ == "__main__":
    main()